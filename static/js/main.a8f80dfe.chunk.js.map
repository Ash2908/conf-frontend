{"version":3,"sources":["components/tile/tile.component.jsx","components/tile-list/tile-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","className","effect","alt","src","conf","imageURL","confName","entryType","confStartDate","confEndDate","href","confUrl","TileList","confs","map","index","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","conferences","fetch","then","response","json","events","paid","free","this","filteredConferences","filter","conference","toLowerCase","includes","city","console","log","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAkBeA,G,MAbF,SAAAC,GAAK,OACd,sBAAKC,UAAU,iBAAf,UACA,cAAC,gBAAD,CAAeA,UAAU,MACxBC,OAAO,UACNC,IAAI,GACJC,IAAG,UAAKJ,EAAMK,KAAKC,YACjB,6BAAKN,EAAMK,KAAKE,WAChB,+BAAOP,EAAMK,KAAKG,YAClB,sCAAOR,EAAMK,KAAKI,cAAlB,YAAmCT,EAAMK,KAAKK,eAC9C,iCAAQ,mBAAGC,KAAMX,EAAMK,KAAKO,QAApB,kCCVHC,G,MAAW,SAAAb,GAAK,OAC1B,qBAAKC,UAAU,YAAf,SACCD,EAAMc,MAAMC,KAAI,SAACV,EAAMW,GAAP,OAAkB,cAAC,EAAD,CAAkBX,KAAMA,GAAbW,UCFpCC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOlB,UAAU,SAASmB,KAAK,SAASF,YAAaA,EACrDG,SAAUF,MCoCCG,G,wDAnCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXC,YAAc,GACdJ,YAAa,IAJH,E,gEAQO,IAAD,OAClBK,MAAM,sFACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAG,EAAKV,SAAS,CAACK,YAAY,GAAD,mBAAMK,EAAOC,MAAb,YAAsBD,EAAOE,c,+BAO9D,IAAD,EAC4BC,KAAKT,MAAlCC,EADC,EACDA,YAAaJ,EADZ,EACYA,YACfa,EACNT,EAAYU,QAAO,SAAAC,GAAU,OAAIA,EAAWjC,SAASkC,cAAcC,SAASjB,EAAYgB,gBAAgBD,EAAWG,KAAKF,cAAcC,SAASjB,EAAYgB,kBAE3J,OADAG,QAAQC,IAAIP,GACJT,EAAYiB,OAGlB,sBAAK7C,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWiB,YAAY,sBAAsBC,aAAckB,KAAKlB,eAChE,cAAC,EAAD,CAAUL,MAASwB,OALvB,6C,GAzBgBS,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a8f80dfe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './tile.styles.css';\r\nimport { LazyLoadImage} from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst Tile = props => (\r\n    <div className='tile-container'>\r\n    <LazyLoadImage className=\"img\"\r\n     effect=\"opacity\"\r\n      alt=''\r\n      src={`${props.conf.imageURL}`}/>\r\n        <h2>{props.conf.confName}</h2>\r\n        <span>{props.conf.entryType}</span>\r\n        <p>{`${props.conf.confStartDate}-${props.conf.confEndDate}`}</p>\r\n        <button><a href={props.conf.confUrl}>Visit Website</a></button>\r\n    </div>\r\n);\r\n\r\nexport default Tile;","import React from 'react';\r\nimport Tile from '../tile/tile.component';\r\nimport './tile-list.styles.css';\r\n\r\nexport const TileList = props => (\r\n   <div className='tile-list'>{\r\n    props.confs.map((conf, index) => (<Tile key={index} conf={conf}/>))\r\n    }</div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className='search' type='search' placeholder={placeholder} \r\n    onChange={handleChange} />\r\n)\r\n\r\n","import React, {Component} from 'react';\nimport {TileList} from './components/tile-list/tile-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      conferences : [],\n      searchField: ''\n    };\n  }\n  \n  componentDidMount() {\n    fetch('https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences')\n    .then(response => response.json())\n    .then(events =>this.setState({conferences: [...events.paid, ...events.free]}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n  const { conferences, searchField } = this.state; \n  const filteredConferences = \n  conferences.filter(conference => conference.confName.toLowerCase().includes(searchField.toLowerCase())||conference.city.toLowerCase().includes(searchField.toLowerCase())); \n  console.log(filteredConferences);\n  return !conferences.length ?\n  <h1>Loading</h1> :\n  (\n    <div className='App'>\n      <h1>Tech Conferences </h1>\n      <SearchBox placeholder='Search by name/city' handleChange={this.handleChange} />\n      <TileList confs = {filteredConferences} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}